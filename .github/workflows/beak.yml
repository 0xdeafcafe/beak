name: Beak

on: [push, pull_request]
  
jobs:
  build-deploy:
    name: Build, Package, and Deploy
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: benjlevesque/short-sha@v1.2
        id: short-sha
        with:
          length: 6

      - name: Setup Node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: '14'

      - name: Cache dependencies
        uses: actions/cache@v2.1.4
        with:
          path: node_modules/
          key: v1-yarn-cache-${{ hashFiles('yarn.lock') }} }}
          restore-keys: |
            v1-yarn-cache-

      - name: Install modules
        run: yarn install --frozen-lockfile

      - name: Build and package (release)
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          BUILD_ENVIRONMENT: ci
          COMMIT_IDENTIFIER: ${{ github.sha }}
          BUILD_NUMBER: ${{ steps.short-sha.outputs.sha }}
          VERSION_RELEASE: 'qui'
          SENTRY_ELECTRON_APP_API_KEY: ${{ secrets.SENTRY_ELECTRON_APP_API_KEY }}
          SENTRY_WEBSITE_API_KEY: ${{ secrets.SENTRY_WEBSITE_API_KEY }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
          ASC_PROVIDER: ${{ secrets.ASC_PROVIDER }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: yarn package:release

      - name: Build (non-release)
        if: startsWith(github.ref, 'refs/tags/v') == false
        env:
          BUILD_ENVIRONMENT: ci
          COMMIT_IDENTIFIER: ${{ github.sha }}
          BUILD_NUMBER: ${{ steps.short-sha.outputs.sha }}
          SENTRY_ELECTRON_APP_API_KEY: ${{ secrets.SENTRY_ELECTRON_APP_API_KEY }}
          SENTRY_WEBSITE_API_KEY: ${{ secrets.SENTRY_WEBSITE_API_KEY }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
          ASC_PROVIDER: ${{ secrets.ASC_PROVIDER }}
        run: yarn package

      - name: Lint and typecheck
        run: |
          # yarn lint
          yarn typecheck

      - name: Delete un-necessary artifacts
        if: startsWith(github.ref, 'refs/tags/v') == false
        run: |
          rm -rf ./packages/electron-host/dist-electron/.icon-ico
          rm -rf ./packages/electron-host/dist-electron/.icon-icns
          rm -rf ./packages/electron-host/dist-electron/mac
          rm -rf ./packages/electron-host/dist-electron/mac-arm64
          rm -rf ./packages/electron-host/dist-electron/win-unpacked
          rm -rf ./packages/electron-host/dist-electron/win-ia32-unpacked
          rm -rf ./packages/electron-host/dist-electron/linux-unpacked
      - name: Upload non-release artifacts to S3
        if: startsWith(github.ref, 'refs/tags/v') == false
        uses: shallwefootball/upload-s3-action@v1.1.2
        with:
          aws_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          aws_bucket: ${{ secrets.AWS_S3_BUILDS_BUCKET }}
          source_dir: 'packages/electron-host/dist-electron/'
          destination_dir: 'commits/${{ github.sha }}/'

      - name: Upload website to S3
        uses: shallwefootball/upload-s3-action@v1.1.2
        with:
          aws_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          aws_bucket: ${{ secrets.AWS_S3_BUCKET_WEBSITE }}
          source_dir: 'packages/website/dist/'
          destination_dir: ''
